<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jinternals.event.bus.demo</groupId>
    <artifactId>jinternals-event-bus-demo</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>activemq</module>
        <module>rabbitmq</module>
    </modules>

    <properties>
        <spring.boot.version>2.0.4.RELEASE</spring.boot.version>
        <spring.cloud.version>Finchley.SR1</spring.cloud.version>

        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>

        <docker.image.prefix>jinternals</docker.image.prefix>
        <plugin.docker.version>0.4.13</plugin.docker.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <plugin.git-commit.version>2.2.2</plugin.git-commit.version>

        <docker.image.prefix>jinternals</docker.image.prefix>
        <plugin.docker.version>0.4.13</plugin.docker.version>

    </properties>

    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/docker</directory>
                <filtering>true</filtering>
                <includes>
                    <include>Dockerfile</include>
                </includes>
                <targetPath>${project.build.directory}/docker-resources</targetPath>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>${java.source.version}</source>
                        <target>${java.target.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${plugin.docker.version}</version>
                    <configuration>
                        <skipDockerBuild>true</skipDockerBuild>
                        <skipDockerPush>true</skipDockerPush>
                        <forceTags>true</forceTags>
                        <imageTags>
                            <imageTag>latest</imageTag>
                        </imageTags>
                        <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                        <dockerDirectory>${project.build.directory}/docker-resources</dockerDirectory>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

</project>
